Struts Config Reloader is developed to support the reloading of struts1 config .Struts config reloading is not supported in struts1,but in develop stage struts config is alway modified,then we must restart web server (e.g. tomcat),this wastes a lot of time and very inefficient,especially when server restart is slowly,so this project is aimed to resolve the issue.This tools make your development more efficiency at develop stage of your struts1 project. Of course it's not required if you use struts2. Now this tools supports reloading struts-config.xml ,tiles config file and message resources properties file that defined in struts-config.xml . 
	
	N.B. In the followning decription we will use $SCR_HOME$ to reference the base directory of the porject,e.g,you check out from the svn.
	
1.	How to use.
	It's very easy to use strutsconfigreloader,you just to add one filter to your web.xml when development,then you can reload you config when file modified.

   <!-- Struts Cofig Reload Filter start --> 
    <filter> 
      <filter-name>strutsCofigReloadFilter</filter-name> 
      <filter-class>
           org.strutsconfigreloader.struts.filter.StrutsConfigReloadFilter
      </filter-class> 
    </filter> 
    <filter-mapping> 
      <filter-name>strutsCofigReloadFilter</filter-name> 
      <url-pattern>*.do</url-pattern> 
    </filter-mapping> 
   <!-- Struts Cofig Reload Filter end -->
   
	It's strongly recommended to remove this filter when you release your product to enhance the system performance.

2. How to build your actifact

It's assumes you had installed maven,you could download and install from maven official site,For more detail of maven please locate your browser to http://maven.apache.org and got it.

When you had installed maven,the only things is :

->cd $SCR_HOME$ 
->mvn clean install

Then you should find the binary artifact from the output directory of module core.It's seems as $SCR$/croe/target/struts-config-reloader-1.1-SNAPSHOT.jar. Or you can find the same jar from you local maven repository.

3. How to run test

It's assumes you had installed maven,then 

3.1 run all test 
->cd $SCR_HOME$ 
->mvn clean test

3.2 run unit test 
->cd $SCR$/core 
->mvn clean test

3.3 run integration test (cactus test)
->cd $SCR$/integration-tests 
->mvn clean test


4. Bug report

Please submit issues to the bug tracer if you find any bug or any other requirements or enhancement,The issues address is https://sourceforge.net/tracker2/?group_id=241581&atid=1116443.


5. Please be free contact me for any question or suggestion.

For more detail about this project ,please visit the home site,thanks.




